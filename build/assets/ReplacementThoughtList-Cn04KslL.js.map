{"version":3,"file":"ReplacementThoughtList-Cn04KslL.js","sources":["../../src/components/ThoughtPicker/ReplacementThoughtList.tsx"],"sourcesContent":["/**\n * ReplacementThoughtList.jsx\n * React component for displaying replacement thoughts filtered by category, subcategory, and intensity\n * Queries replacementThoughts where (category, subcategory, level ≤ intensity)\n */\n\nimport React, { useState, useEffect } from 'react';\nimport contentSearchService from '../../services/ContentSearchService';\nimport { Spinner, ErrorState } from '../common';\n\ninterface ReplacementThoughtListProps {\n  category: string;\n  subcategory?: string | null;\n  intensity?: number;\n  onThoughtSelect: (thought: string) => void;\n  selectedThought: string | null;\n}\n\nconst ReplacementThoughtList: React.FC<ReplacementThoughtListProps> = ({ \n  category, \n  subcategory = null, \n  intensity = 10, \n  onThoughtSelect,\n  selectedThought \n}) => {\n  const [replacementThoughts, setReplacementThoughts] = useState<string[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const loadReplacementThoughts = async (): Promise<void> => {\n      if (!category) {\n        setReplacementThoughts([]);\n        return;\n      }\n\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const thoughts = await contentSearchService.getReplacementThoughts(\n          category, \n          subcategory, \n          intensity\n        );\n        \n        setReplacementThoughts(thoughts);\n        \n        if (thoughts.length === 0) {\n          console.warn(`No replacement thoughts found for ${category}${subcategory ? ` > ${subcategory}` : ''}`);\n        }\n      } catch (err) {\n        console.error('Error loading replacement thoughts:', err);\n        setError(err instanceof Error ? err.message : 'Unknown error');\n        setReplacementThoughts([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadReplacementThoughts();\n  }, [category, subcategory, intensity]);\n\n  const handleThoughtClick = (thought: string): void => {\n    if (onThoughtSelect) {\n      onThoughtSelect(thought);\n    }\n  };\n\n  // Don't render if no category is selected\n  if (!category) {\n    return null;\n  }\n\n  if (loading) {\n    return (\n      <Spinner \n        message=\"Loading replacement thoughts...\"\n        aria-label=\"Loading better-feeling thoughts for your selection\"\n      />\n    );\n  }\n\n  const retryLoading = (): void => {\n    setError(null);\n    setLoading(true);\n    // Re-trigger useEffect by updating dependencies\n  };\n\n  if (error) {\n    return (\n      <ErrorState\n        title=\"Error loading replacement thoughts\"\n        message={error}\n        onRetry={retryLoading}\n        retryText=\"Try Again\"\n      />\n    );\n  }\n\n  if (replacementThoughts.length === 0) {\n    return (\n      <div className=\"replacement-thought-list empty\">\n        <h3>No replacement thoughts available</h3>\n        <p>\n          No replacement thoughts found for {category}\n          {subcategory && ` > ${subcategory}`} at intensity level {intensity}.\n        </p>\n        <div className=\"empty-actions\">\n          <button \n            className=\"btn-secondary\"\n            onClick={() => window.location.reload()}\n          >\n            Refresh\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"replacement-thought-list\">\n      <h3>\n        Better-feeling thoughts for {category}\n        {subcategory && ` > ${subcategory}`}\n      </h3>\n      \n      {intensity < 10 && (\n        <div className=\"intensity-filter-info\" role=\"status\" aria-live=\"polite\">\n          <small>Showing thoughts for intensity level ≤ {intensity}</small>\n        </div>\n      )}\n      \n      <div className=\"thought-buttons\">\n        {replacementThoughts.map((thought, index) => (\n          <button\n            key={index}\n            className={`btn-primary thought-button ${\n              selectedThought === thought ? 'selected' : ''\n            }`}\n            onClick={() => handleThoughtClick(thought)}\n            style={{ animationDelay: `${index * 0.1}s` }}\n            data-testid={`thought-button-${index}`}\n            aria-pressed={selectedThought === thought}\n            title={thought}\n          >\n            <span className=\"thought-text\">{thought}</span>\n          </button>\n        ))}\n      </div>\n      \n      <div className=\"thought-list-footer\">\n        <small>\n          Found {replacementThoughts.length} replacement thought{replacementThoughts.length !== 1 ? 's' : ''}\n        </small>\n        {selectedThought && (\n          <button\n            className=\"btn-primary\"\n            onClick={() => {\n              navigator.clipboard.writeText(selectedThought);\n              alert('Copied to clipboard!');\n            }}\n          >\n            Export Selected Thought\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ReplacementThoughtList;"],"names":["ReplacementThoughtList","category","subcategory","intensity","onThoughtSelect","selectedThought","replacementThoughts","setReplacementThoughts","useState","loading","setLoading","error","setError","useEffect","thoughts","contentSearchService","err","handleThoughtClick","thought","jsx","Spinner","retryLoading","ErrorState","jsxs","index"],"mappings":"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"}