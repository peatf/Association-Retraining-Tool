{"version":3,"file":"CardNeutralize-CwHMSjLu.js","sources":["../../src/components/CardNeutralize.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport BaseCard from './BaseCard';\nimport { useSession } from '../context/SessionContext';\nimport contentSearchService from '../services/ContentSearchService';\nimport { Spinner, ErrorState } from './common';\n\ninterface PromptButtonProps {\n  selected?: boolean;\n}\n\nconst PromptButton = styled.button<PromptButtonProps>`\n  display: block;\n  width: 100%;\n  padding: 1rem;\n  margin-bottom: 0.5rem;\n  text-align: left;\n  background-color: ${props => props.selected ? '#e0e0e0' : '#f0f0f0'};\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #e0e0e0;\n  }\n`;\n\ninterface CardNeutralizeProps {\n  onComplete: () => void;\n}\n\nconst CardNeutralize = ({ onComplete }: CardNeutralizeProps) => {\n  const { canvasState, updateCanvasState } = useSession();\n  const [prompts, setPrompts] = useState<string[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n  const [selectedPrompt, setSelectedPrompt] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchPrompts = async () => {\n      try {\n        setLoading(true);\n        const fetchedPrompts = await contentSearchService.getMiningPrompts(canvasState.selectedTopic || '', 'neutralize');\n        setPrompts(fetchedPrompts);\n        setLoading(false);\n      } catch (err) {\n        setError(err as Error);\n        setLoading(false);\n      }\n    };\n\n    if (canvasState.selectedTopic) {\n      fetchPrompts();\n    }\n  }, [canvasState.selectedTopic]);\n\n  const handlePromptSelect = (prompt: string) => {\n    setSelectedPrompt(prompt);\n  };\n\n  const handleComplete = () => {\n    updateCanvasState({\n      miningResults: {\n        ...canvasState.miningResults,\n        neutralize: {\n          prompt: selectedPrompt,\n          timestamp: new Date().toISOString(),\n        },\n      },\n    });\n    onComplete();\n  };\n\n  if (loading) {\n    return <Spinner message=\"Loading prompts...\" />;\n  }\n\n  if (error) {\n    return <ErrorState title=\"Error loading prompts\" message={error.message} aria-label=\"Error loading prompts\" />;\n  }\n\n  return (\n    <BaseCard \n      title=\"Neutralize the Thought\" \n      onComplete={handleComplete} \n      completionText=\"Continue\"\n      onActivate={() => {}}\n      testId=\"neutralize-card\"\n      onSkip={() => {}}\n      aria-describedby=\"neutralize-description\"\n      aria-label=\"Neutralize the Thought\"\n    >\n      <div style={{ padding: '1rem' }}>\n        <p>Select a prompt to help neutralize the thought:</p>\n        <div>\n          {prompts.map((prompt, index) => (\n            <PromptButton\n              key={index}\n              selected={selectedPrompt === prompt}\n              onClick={() => handlePromptSelect(prompt)}\n            >\n              {prompt}\n            </PromptButton>\n          ))}\n        </div>\n      </div>\n    </BaseCard>\n  );\n};\n\nexport default CardNeutralize;\n"],"names":["PromptButton","styled","props","CardNeutralize","onComplete","canvasState","updateCanvasState","useSession","prompts","setPrompts","useState","loading","setLoading","error","setError","selectedPrompt","setSelectedPrompt","useEffect","fetchPrompts","fetchedPrompts","contentSearchService","err","handlePromptSelect","prompt","handleComplete","jsx","Spinner","ErrorState","BaseCard","index"],"mappings":"wIAWA,MAAMA,EAAeC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMNC,GAASA,EAAM,SAAW,UAAY,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAc/DC,EAAiB,CAAC,CAAE,WAAAC,KAAsC,CAC9D,KAAM,CAAE,YAAAC,EAAa,kBAAAC,CAAA,EAAsBC,EAAA,EACrC,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAmB,CAAA,CAAE,EAC7C,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAI,EACrC,CAACG,EAAOC,CAAQ,EAAIJ,EAAAA,SAAuB,IAAI,EAC/C,CAACK,EAAgBC,CAAiB,EAAIN,EAAAA,SAAwB,IAAI,EAExEO,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAe,SAAY,CAC/B,GAAI,CACFN,EAAW,EAAI,EACf,MAAMO,EAAiB,MAAMC,EAAqB,iBAAiBf,EAAY,eAAiB,GAAI,YAAY,EAChHI,EAAWU,CAAc,EACzBP,EAAW,EAAK,CAClB,OAASS,EAAK,CACZP,EAASO,CAAY,EACrBT,EAAW,EAAK,CAClB,CACF,EAEIP,EAAY,eACda,EAAA,CAEJ,EAAG,CAACb,EAAY,aAAa,CAAC,EAE9B,MAAMiB,EAAsBC,GAAmB,CAC7CP,EAAkBO,CAAM,CAC1B,EAEMC,EAAiB,IAAM,CAC3BlB,EAAkB,CAChB,cAAe,CACb,GAAGD,EAAY,cACf,WAAY,CACV,OAAQU,EACR,UAAW,IAAI,KAAA,EAAO,YAAA,CAAY,CACpC,CACF,CACD,EACDX,EAAA,CACF,EAEA,OAAIO,EACKc,EAAAA,IAACC,EAAA,CAAQ,QAAQ,oBAAA,CAAqB,EAG3Cb,EACKY,MAACE,GAAW,MAAM,wBAAwB,QAASd,EAAM,QAAS,aAAW,wBAAwB,EAI5GY,EAAAA,IAACG,EAAA,CACC,MAAM,yBACN,WAAYJ,EACZ,eAAe,WACf,WAAY,IAAM,CAAC,EACnB,OAAO,kBACP,OAAQ,IAAM,CAAC,EACf,mBAAiB,yBACjB,aAAW,yBAEX,gBAAC,MAAA,CAAI,MAAO,CAAE,QAAS,QACrB,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAAA,iDAAA,CAA+C,QACjD,MAAA,CACE,SAAAjB,EAAQ,IAAI,CAACe,EAAQM,IACpBJ,EAAAA,IAACzB,EAAA,CAEC,SAAUe,IAAmBQ,EAC7B,QAAS,IAAMD,EAAmBC,CAAM,EAEvC,SAAAA,CAAA,EAJIM,CAAA,CAMR,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CAGN"}