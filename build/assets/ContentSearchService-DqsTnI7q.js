import{_ as u,e as l}from"./main-ChZ8bRsW.js";function d(c){return c&&c.category&&Array.isArray(c.subcategories)&&c.summaryForVectorization&&c.miningPrompts&&Array.isArray(c.replacementThoughts)}class g{constructor(){this.contentIndex=null,this.isLoaded=!1,this.loadingPromise=null,this.cache=new Map}async loadContentIndex(){return this.isLoaded&&this.contentIndex?this.contentIndex:this.loadingPromise?this.loadingPromise:(this.loadingPromise=this._performLoad(),this.loadingPromise)}async _performLoad(){try{let e;if(typeof window>"u"){const t=await u(()=>import("./__vite-browser-external-BIHI7g3E.js"),[]),n=(await u(()=>import("./__vite-browser-external-BIHI7g3E.js"),[])).resolve("public/content/content-index.bin");if(t.existsSync(n)){const a=t.readFileSync(n,"utf8");e=JSON.parse(a)}else throw new Error("Content index file not found")}else{const t=new AbortController,r=setTimeout(()=>t.abort(),1e4);try{const n=await fetch("/public/content/content-index.bin",{signal:t.signal});if(clearTimeout(r),!n.ok)throw new Error(`Failed to load content index: ${n.status} ${n.statusText}`);e=await n.json()}catch(n){throw clearTimeout(r),n}}return this.contentIndex=e,this.isLoaded=!0,this.loadingPromise=null,l.clearRetryAttempts("contentService_loadIndex"),console.log("Content index loaded:",{version:this.contentIndex.version,categories:this.contentIndex.metadata.categories.length,entries:this.contentIndex.metadata.totalEntries}),this.contentIndex}catch(e){this.loadingPromise=null;const t=await l.handleContentServiceError("loadIndex",e,{operation:"loadContentIndex"});if(t.useFallback)return this.contentIndex={metadata:{categories:t.fallbackData||[],subcategories:{}},entries:[],version:"fallback",timestamp:Date.now(),fallback:!0},this.isLoaded=!0,console.warn("Using fallback content structure due to loading error"),this.contentIndex;throw e}}async getCategories(){const e="getCategories";if(this.cache.has(e))return this.cache.get(e);if(this.cache.has(e+"-promise"))return this.cache.get(e+"-promise");const t=(async()=>{try{const n=(await this.loadContentIndex()).metadata.categories||[];return this.cache.set(e,n),n}catch(r){return(await l.handleContentServiceError("getCategories",r)).fallbackData||[]}finally{this.cache.delete(e+"-promise")}})();return this.cache.set(e+"-promise",t),t}async getSubcategories(e){const t=`getSubcategories-${e}`;if(this.cache.has(t))return this.cache.get(t);if(this.cache.has(t+"-promise"))return this.cache.get(t+"-promise");const r=(async()=>{try{const a=(await this.loadContentIndex()).metadata.subcategories[e]||[];return this.cache.set(t,a),a}catch(n){return(await l.handleContentServiceError("getSubcategories",n,{category:e})).fallbackData||[]}finally{this.cache.delete(t+"-promise")}})();return this.cache.set(t+"-promise",r),r}async getReplacementThoughts(e,t=null,r=10){const n=`getReplacementThoughts-${e}-${t}-${r}`;if(this.cache.has(n))return this.cache.get(n);if(this.cache.has(n+"-promise"))return this.cache.get(n+"-promise");const a=(async()=>{try{const s=await this.loadContentIndex(),o=[],i=s.entries.filter(h=>!(!d(h)||h.category!==e||t&&!h.subcategories.includes(t)));for(const h of i)h.replacementThoughts&&Array.isArray(h.replacementThoughts)&&o.push(...h.replacementThoughts);return this.cache.set(n,o),o}catch(s){return(await l.handleContentServiceError("getReplacementThoughts",s,{category:e,subcategory:t,maxIntensity:r})).fallbackData||[]}finally{this.cache.delete(n+"-promise")}})();return this.cache.set(n+"-promise",a),a}async getMiningPrompts(e,t){const r=`getMiningPrompts-${e}-${t}`;if(this.cache.has(r))return this.cache.get(r);if(this.cache.has(r+"-promise"))return this.cache.get(r+"-promise");const n=(async()=>{try{const a=await this.loadContentIndex(),s=[],o=a.entries.filter(i=>d(i)&&i.category===e);for(const i of o)i.miningPrompts&&i.miningPrompts[t]&&s.push(...i.miningPrompts[t]);return this.cache.set(r,s),s}catch(a){return(await l.handleContentServiceError("getMiningPrompts",a,{category:e,type:t})).fallbackData||[]}finally{this.cache.delete(r+"-promise")}})();return this.cache.set(r+"-promise",n),n}async searchContent(e,t=null){const r=await this.loadContentIndex(),n=[],a=e.toLowerCase();for(const s of r.entries)if(!(t&&s.category!==t))for(const o of s.chunks||[])o.text.toLowerCase().includes(a)&&n.push({text:o.text,category:s.category,subcategories:s.subcategories,metadata:o.metadata,relevance:this.calculateRelevance(o.text,e)});return n.sort((s,o)=>o.relevance-s.relevance)}calculateRelevance(e,t){const r=e.toLowerCase(),n=t.toLowerCase(),a=(r.match(new RegExp(n,"g"))||[]).length,s=1/(e.length/100);return a+s}async getStats(){const e=await this.loadContentIndex();return{version:e.version,timestamp:e.timestamp,categories:e.metadata.categories.length,totalEntries:e.metadata.totalEntries,totalChunks:e.metadata.totalChunks,subcategoriesPerCategory:Object.entries(e.metadata.subcategories).map(([t,r])=>({category:t,subcategories:r.length}))}}}const f=new g;export{f as c};
//# sourceMappingURL=ContentSearchService-DqsTnI7q.js.map
