{"version":3,"file":"CardDataExtraction-DGIASBhN.js","sources":["../../src/components/CardDataExtraction.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport BaseCard from './BaseCard';\nimport { useSession } from '../context/SessionContext';\nimport contentSearchService from '../services/ContentSearchService';\nimport { Spinner, ErrorState } from './common';\n\ninterface OptionButtonProps {\n  selected?: boolean;\n}\n\nconst OptionButton = styled.button<OptionButtonProps>`\n  padding: 0.5rem 1rem;\n  margin: 0 0.5rem;\n  background-color: ${props => props.selected ? '#e0e0e0' : '#f0f0f0'};\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #e0e0e0;\n  }\n`;\n\ninterface CardDataExtractionProps {\n  onComplete: () => void;\n}\n\nconst CardDataExtraction = ({ onComplete }: CardDataExtractionProps) => {\n  const { canvasState, updateCanvasState } = useSession();\n  const [prompts, setPrompts] = useState<string[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n  const [answers, setAnswers] = useState<Record<string, string>>({});\n\n  useEffect(() => {\n    const fetchPrompts = async () => {\n      try {\n        setLoading(true);\n        const fetchedPrompts = await contentSearchService.getMiningPrompts(canvasState.selectedTopic || '', 'dataExtraction');\n        setPrompts(fetchedPrompts);\n        setLoading(false);\n      } catch (err) {\n        setError(err as Error);\n        setLoading(false);\n      }\n    };\n\n    if (canvasState.selectedTopic) {\n      fetchPrompts();\n    }\n  }, [canvasState.selectedTopic]);\n\n  const handleAnswerSelect = (prompt: string, answer: string) => {\n    setAnswers({ ...answers, [prompt]: answer });\n  };\n\n  const handleComplete = () => {\n    updateCanvasState({\n      miningResults: {\n        ...canvasState.miningResults,\n        dataExtraction: {\n          answers,\n          timestamp: new Date().toISOString(),\n        },\n      },\n    });\n    onComplete();\n  };\n\n  if (loading) {\n    return <Spinner message=\"Loading prompts...\" aria-label=\"Loading prompts\" />;\n  }\n\n  if (error) {\n    return <ErrorState title=\"Error loading prompts\" message={error.message} aria-label=\"Error loading prompts\" />;\n  }\n\n  const summary = Object.values(answers).reduce((acc: Record<string, number>, answer: string) => {\n    acc[answer] = (acc[answer] || 0) + 1;\n    return acc;\n  }, {});\n\n  return (\n    <BaseCard \n      title=\"Data Extraction\" \n      onComplete={handleComplete} \n      completionText=\"Continue\"\n      onActivate={() => {}}\n      testId=\"data-extraction-card\"\n      onSkip={() => {}}\n      aria-describedby=\"data-extraction-description\"\n      aria-label=\"Data Extraction\"\n    >\n      <div style={{ padding: '1rem' }}>\n        {prompts.map((prompt, index) => {\n          const parts = (prompt as string).split(' or ');\n          if (parts.length === 2) {\n            const optionA = parts[0].replace('A: ', '');\n            const optionB = parts[1].replace('B: ', '');\n            return (\n              <div key={index} style={{ marginBottom: '1rem' }}>\n                <p>{prompt}</p>\n                <div>\n                  <OptionButton\n                    selected={answers[prompt] === 'A'}\n                    onClick={() => handleAnswerSelect(prompt, 'A')}\n                  >\n                    {optionA}\n                  </OptionButton>\n                  <OptionButton\n                    selected={answers[prompt] === 'B'}\n                    onClick={() => handleAnswerSelect(prompt, 'B')}\n                  >\n                    {optionB}\n                  </OptionButton>\n                </div>\n              </div>\n            );\n          }\n          return <p key={index}>{prompt}</p>;\n        })}\n        <div style={{ marginTop: '2rem', textAlign: 'center' }}>\n          <h4>Summary</h4>\n          <p>A answers: {summary.A || 0}</p>\n          <p>B answers: {summary.B || 0}</p>\n        </div>\n      </div>\n    </BaseCard>\n  );\n};\n\nexport default CardDataExtraction;\n"],"names":["OptionButton","styled","props","CardDataExtraction","onComplete","canvasState","updateCanvasState","useSession","prompts","setPrompts","useState","loading","setLoading","error","setError","answers","setAnswers","useEffect","fetchPrompts","fetchedPrompts","contentSearchService","err","handleAnswerSelect","prompt","answer","handleComplete","jsx","Spinner","ErrorState","summary","acc","BaseCard","index","parts","optionA","optionB","jsxs"],"mappings":"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"}